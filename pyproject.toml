[tool.poetry]
name = "Quantize LLM"
version = "0.1.0"
description = "This project quantizes LLM's to improve performance and reduce memory footprint."
authors = ["Marten Koopmans"]
readme = "README.md"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.dependencies]
python = "^3.10"
fschat = "^0.2.18"
gguf = "^0.4.4"
torch = "^2.1.0"
torchvision = "^0.16.0"
torchaudio = "^2.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pylint = "^2.17.4"
pre-commit = "^3.3.3"

[tool.ruff]
line-length = 120
fix = true
ignore = [
    "E203",
    "D100",
    "D101",
    "D104",
    "D105",
    "D106",
    "D107",
    "D205",
    "B008",
    "E501",
    "TRY400",
    "B904",
    "TRY200",
    "TRY300",

]
select = [
    "A",
    "B",
    "C4",
    "D",
    "E",
    "EM",
    "ERA",
    "F",
    "FA",
    "I",
    "N",
    "PL",
    "PTH",
    "RET",
    "RUF",
    "S",
    "SIM",
    "TID",
    "TRY",
    "T20",
]

[tool.ruff.per-file-ignores]
"tests/*.py" = [
    "S101",     # asserts allowed in tests
    "D102",     # docstrings not needed in tests
    "D103",     # docstrings not needed in tests
    "PTH123",   # No need for path in return value of mockers
    "S106",     # Hard-code example tokens in test
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.pylint]
max-args = 7
allow-magic-value-types = ["int", "str"]

[tool.black]
include = '\.pyi?$'
line-length = 120

[tool.mypy]
files = "."
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true

[tool.pytest.ini_options]
addopts = "-rA"
